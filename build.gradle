import org.gradle.internal.os.OperatingSystem

plugins {
    id 'application'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.30-M1'
}

allprojects {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url 'https://jitpack.io' }
        maven { url 'https://nexus.sandboxpowered.org/repository/maven-public/' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_14

    compileKotlin {
        kotlinOptions {
            jvmTarget = "14"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "14"
        }
    }
}

application {
    mainClassName = "org.sandboxpowered.silica.client.main.Main"
    if (OperatingSystem.current().isMacOsX()) {
        // Need this to make sure the OS starts our app on thread 0
        applicationDefaultJvmArgs += "-XStartOnFirstThread"
    }
}

project.ext.lwjglVersion = "3.2.4-SNAPSHOT"
project.ext.jomlVersion = "1.9.25"

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64") ? "natives-linux-arm64" : "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_14

group 'org.sandboxpowered'
version '1.0-SNAPSHOT'